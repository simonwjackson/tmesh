#!/usr/bin/env bash

TMUX="${TMUX:-}"
TERM="${TERM:-}"
TMESH_SOCKET="${TMESH_SOCKET:-tmesh}"
SERVER="${TMESH_SERVER:=$(hostname)}"
CMD="${TMESH_CMD:-${SHELL:-/bin/sh}}"
TMESH_BASE_CONFIG='
# INFO: https://github.com/tmux/tmux/wiki/Clipboard#terminal-support---tmux-inside-tmux
set -s set-clipboard on

# allow passthrough of escape sequences
set -g allow-passthrough on
set -g status off

# Switch to another session if last window closed
set-option -g detach-on-destroy off

# Disable right click menu
unbind-key -T root MouseDown3Pane

# Respond to focus events
set-option -g focus-events on

# address vim mode switching delay (http://superuser.com/a/252717/65504)
set-option -s escape-time 0

# silent
set-option -g visual-activity off
set-option -g visual-bell off
set-option -g visual-silence off
set-option -g bell-action none

# Ignore window notifications
set-window-option -g monitor-activity off
# Auto resize to the latest window
set-option -g window-size latest

# Server options
set -g default-terminal "tmux-256color"
set -sa terminal-features ',xterm-256color:RGB'

# Enable 24-bit true color support
set -ga terminal-overrides ",*256col*:Tc"
set -g history-limit 50000

# Window options  
setw -g aggressive-resize on
setw -g mode-keys vi

# Disable all the status bar stuff
set -g status off
'

TMESH_CLIENT_CONFIG="
${TMESH_BASE_CONFIG}

# inline a script
bind -n M-s display-popup -E server-select.sh
"

TMESH_SERVER_CONFIG="
${TMESH_BASE_CONFIG}
${TMESH_CLIENT_CONFIG}

set -g prefix C-a
unbind-key C-b
bind-key C-a send-prefix
"

function tryStartTmeshServerSession() {
  # TODO: use local tmux if available
  local escaped_cmd
  escaped_cmd=$(printf '%q' "$CMD")
  
  # Generate session name from parent directory (cleaned of special chars)
  local session_name
  session_name=$(basename "$(dirname "$PWD")" | sed 's/[^a-zA-Z0-9_-]/-/g')
  
  # Find main or master directory for working directory and window name
  local work_dir window_name
  work_dir=$(find . -maxdepth 1 -type d \( -name main -o -name master \) | head -1)
  window_name=${work_dir#./}
  
  # Use current directory if no main/master found
  if [[ -z "$work_dir" ]]; then
    work_dir="."
    window_name="default"
  fi
  
  mosh "$SERVER" -- bash -c "nix run nixpkgs#tmux  -- -f <(echo -n \$'$TMESH_SERVER_CONFIG') -L ${TMESH_SOCKET}-server new-session -s '$session_name' -c '$work_dir' -n '$window_name' -d $escaped_cmd" >/dev/null 2>&1
}

function tryStartTmeshClientSession() {
  # Generate session name from parent directory (cleaned of special chars)
  local session_name
  session_name=$(basename "$(dirname "$PWD")" | sed 's/[^a-zA-Z0-9_-]/-/g')
  
  nix run nixpkgs#tmux -- \
    -f <(
      cat <<EOF
$TMESH_CLIENT_CONFIG
EOF
    ) \
    -L "${TMESH_SOCKET}-client" \
    new-session \
    -s "$SERVER" \
    -d \
    mosh "$SERVER" -- sh -c "nix run nixpkgs#tmux -- -L ${TMESH_SOCKET}-server attach-session -t '$session_name'" >/dev/null 2>&1
}

tryStartTmesh() {
  # Generate session name from parent directory (cleaned of special chars)
  local session_name
  session_name=$(basename "$(dirname "$PWD")" | sed 's/[^a-zA-Z0-9_-]/-/g')
  
  if ! nix run nixpkgs#tmux -- -L "${TMESH_SOCKET}-client" has-session -t "$SERVER" 2>/dev/null; then
    tryStartTmeshServerSession
    tryStartTmeshClientSession
  fi
}

tryConnectTmux() {
  # TODO: test this command.
  # nix run nixpkgs#tmux -- -L "${TMESH_SOCKET}-client" attach-session -d -t "$SERVER"

  if [[ -z "$TMUX" ]]; then
    nix run nixpkgs#tmux -- -L "${TMESH_SOCKET}-client" attach-session -t "$SERVER"
  else
    nix run nixpkgs#tmux -- -L "${TMESH_SOCKET}-client" switch-client -t "$SERVER"
  fi
}

main() {
  tryStartTmesh
  tryConnectTmux
}

main
